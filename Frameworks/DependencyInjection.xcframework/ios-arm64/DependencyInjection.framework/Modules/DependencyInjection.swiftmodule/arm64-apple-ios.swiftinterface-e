// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Osize -module-name DependencyInjection
import Foundation
import Swift
import _Concurrency
public protocol Injectable {
  init()
}
public protocol Mock : DependencyInjection.Injectable {
}
public protocol Primary : DependencyInjection.Injectable {
}
@propertyWrapper public struct Injected<Dependency> {
  public var wrappedValue: Dependency {
    mutating get
    set
  }
  public init()
}
public func stopInjection()
public func instance<T>(_ type: Any, _ implementation: T.Type) where T : DependencyInjection.Injectable
public func shared<T>(_ type: Any, _ implementation: T.Type) where T : DependencyInjection.Injectable
public func global<T>(_ type: Any, _ implementation: T.Type) where T : DependencyInjection.Injectable
public protocol ModuleContract : AnyObject {
  static func get()
}
